<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link href="https://fonts.googleapis.com/css2?family=Caveat:wght@600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/styles.css"/>
    <title>Interactive Whiteboard</title>

</head>
<body>
<header>
<!--    <button class="login-btn" id="loginBtn">Login</button>-->
        <button class="login-btn" id="loginBtn">Login</button>
        <button class="logout-btn" id="logoutBtn" style="display: none;">Logout</button>
        <button class="drawing-btn" id="drawingBtn">Drawing</button>
        <button class="about-btn" id="aboutBtn">About</button>
</header>
<main>
    <section class="intro">
        <h1>Welcome to the Interactive Whiteboard!</h1>
        <p>
            This application offers an intuitive and user-friendly platform for
            users to collaborate and create digital whiteboards in real-time.
            Share your ideas, brainstorm, sketch, and communicate with your team
            seamlessly. Sign in to start using the Interactive Whiteboard now!
        </p>
    </section>
</main>
<nav class="login-nav" id="loginNav">
    <button class="close-btn" id="closeBtn">&times;</button>
    <form
            class="login-form"
            action="/auth/login"
            method="post"
            id="loginForm"
    >
        <h2>Login</h2>
        <label for="username">Student ID / Professor ID:</label>
        <input type="text" name="username" id="username" required/>
        <label for="password">Password:</label>
        <input type="password" name="password" id="password" required/>
        <div>
            <label for="student">Student</label>
            <input type="radio" name="userType" id="student" value="student"/>
        </div>
        <div>
            <label for="professor">Professor</label>
            <input type="radio" name="userType" id="professor" value="professor"/>
        </div>
        <input type="submit" value="Login"/>
    </form>
</nav>
<script>
    const loginBtn = document.getElementById("loginBtn");
    const closeBtn = document.getElementById("closeBtn");
    const loginNav = document.getElementById("loginNav");
    const loginForm = document.getElementById("loginForm");
    const drawingBtn = document.getElementById("drawingBtn");
    const logoutBtn = document.getElementById("logoutBtn");
    let listUser = null;

    drawingBtn.addEventListener("click", () => {
        // window.location.href = '/course';
        if (listUser) {
            const { username, password, userType } = listUser;
            window.location.href = `/course?username=${username}&password=${password}&userType=${userType}`;
        } else {
            alert('Please log in first.');
        }
    });

    loginBtn.addEventListener("click", () => {
        loginNav.classList.toggle("visible");
    });

    closeBtn.addEventListener("click", () => {
        loginNav.classList.remove("visible");
    });

    // try on session check
    function checkSession() {
        fetch("/auth/check-session", {
            method: "GET",
            credentials: "include"
        })
            .then(response => {
                if (response.ok) {
                    return response.json();
                } else {
                    throw new Error("No session");
                }
            })
            .then(data => {
                console.log("Session data:", data);
                updateUIAfterLogin();
            })
            .catch(error => {
                console.log(error.message);
            });
    }

    // Add this function to update the UI after a successful login
    function updateUIAfterLogin() {
        loginBtn.style.display = "none";
        logoutBtn.style.display = "inline";
    }

    // Call the checkSession function when the page loads
    checkSession();

    loginForm.addEventListener("submit", (event) => {
        event.preventDefault();
        const username = document.getElementById("username").value;
        const password = document.getElementById("password").value;
        const userType = document.querySelector('input[name="userType"]:checked').value;
        console.log(JSON.stringify({username, password, userType}));
        fetch("/auth/login", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({username, password, userType}),
        })
            .then((response) => {
                if (response.ok) {
                    // location.reload();
                    updateUIAfterLogin();
                    listUser = {
                        username: username,
                        password: password,
                        userType: userType,
                    };
                    // window.location.href = '/course';
                } else {
                    throw new Error("Login failed");
                }
            })
            .catch((error) => {
                alert(error.message);
            });
    });


    logoutBtn.addEventListener("click", () => {
        fetch("/auth/logout", {
            method: "GET",
            credentials: "include"
        })
            .then(response => {
                if (response.ok) {
                    loginBtn.style.display = "inline";
                    logoutBtn.style.display = "none";
                } else {
                    throw new Error("Logout failed");
                }
            })
            .catch(error => {
                alert(error.message);
            });
    });

</script>
</body>
</html>



